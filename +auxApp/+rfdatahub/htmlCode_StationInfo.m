function [htmlContent, emissionID] = htmlCode_EmissionInfo(specData, idx, idxEmission)

    emissionTag   = sprintf('%.3f MHz ⌂ %.1f kHz', specData(idx).UserData.Emissions.Frequency(idxEmission), specData(idx).UserData.Emissions.BW(idxEmission));
    metaData      = struct('FreqStart',        specData(idx).MetaData.FreqStart,        ...
                           'FreqStop',         specData(idx).MetaData.FreqStop,         ...
                           'DataPoints',       specData(idx).MetaData.DataPoints,       ...
                           'StepWidth',        (specData(idx).MetaData.FreqStop - specData(idx).MetaData.FreqStart)/(specData(idx).MetaData.DataPoints-1), ...
                           'Resolution',       specData(idx).MetaData.Resolution,       ...
                           'TraceMode',        specData(idx).MetaData.TraceMode,        ...
                           'TraceIntegration', specData(idx).MetaData.TraceIntegration, ...
                           'Detector',         specData(idx).MetaData.Detector,         ...
                           'LevelUnit',        specData(idx).MetaData.LevelUnit);

    dataStruct(1) = struct('group', 'RECEPTOR',            'value', specData(idx).Receiver);
    dataStruct(2) = struct('group', 'TEMPO DE OBSERVAÇÃO', 'value', sprintf('%s - %s', datestr(specData(idx).Data{1}(1),   'dd/mm/yyyy HH:MM:SS'), datestr(specData(idx).Data{1}(end), 'dd/mm/yyyy HH:MM:SS')));
    dataStruct(3) = struct('group', 'METADADOS',           'value', metaData);

    htmlContent   = [sprintf('<p style="font-family: Helvetica, Arial, sans-serif; font-size: 16px; text-align: justify; line-height: 12px; margin: 5px; padding-top: 5px; padding-bottom: 10px;"><b>%s</b></p>', emissionTag) ...
                     textFormatGUI.struct2PrettyPrintList(dataStruct, 'delete')];

    emissionID    = struct('Thread',   struct('Index',     idx,                                                     ...
                                              'UUID',      {specData(idx).RelatedFiles.uuid}),                      ...
                           'Emission', struct('Index',     idxEmission,                                             ...
                                              'Frequency', specData(idx).UserData.Emissions.Frequency(idxEmission), ...
                                              'BW',        specData(idx).UserData.Emissions.BW(idxEmission),        ...
                                              'Tag',       emissionTag));
end