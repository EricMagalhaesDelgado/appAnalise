function [htmlContent, emissionID] = htmlCode_EmissionInfo(specData, idxThread, idxEmission)

    if isempty(idxEmission) % Emissão virtual
        FreqCenter = (specData(idxThread).MetaData.FreqStart + specData(idxThread).MetaData.FreqStop) / 2e6; % MHz
        BW_kHz     = (specData(idxThread).MetaData.FreqStop - specData(idxThread).MetaData.FreqStart) / 1e3; % kHz
    
    else % Emissão real
        FreqCenter  = specData(idxThread).UserData.Emissions.Frequency(idxEmission);
        BW_kHz      = specData(idxThread).UserData.Emissions.BW_kHz(idxEmission);
    end

    emissionTag    = sprintf('%.3f MHz ⌂ %.1f kHz', FreqCenter, BW_kHz);

    bandFreqStart  = sprintf('%.3f MHz', specData(idxThread).MetaData.FreqStart/1e+6);
    bandFreqStop   = sprintf('%.3f MHz', specData(idxThread).MetaData.FreqStop/1e+6);
    bandStepWidth  = sprintf('%.1f kHz', (specData(idxThread).MetaData.FreqStop - specData(idxThread).MetaData.FreqStart)/(1000*(specData(idxThread).MetaData.DataPoints-1)));
    bandResolution = sprintf('%.1f kHz', specData(idxThread).MetaData.Resolution/1000);

    metaData       = struct('FreqStart',        bandFreqStart,                           ...
                            'FreqStop',         bandFreqStop,                            ...
                            'DataPoints',       specData(idxThread).MetaData.DataPoints,       ...
                            'StepWidth',        bandStepWidth,                           ...
                            'Resolution',       bandResolution,                          ...
                            'TraceMode',        specData(idxThread).MetaData.TraceMode,        ...
                            'TraceIntegration', specData(idxThread).MetaData.TraceIntegration, ...
                            'Detector',         specData(idxThread).MetaData.Detector,         ...
                            'LevelUnit',        specData(idxThread).MetaData.LevelUnit);

    dataStruct(1)  = struct('group', 'RECEPTOR',            'value', specData(idxThread).Receiver);
    dataStruct(2)  = struct('group', 'TEMPO DE OBSERVAÇÃO', 'value', sprintf('%s - %s', datestr(specData(idxThread).Data{1}(1),   'dd/mm/yyyy HH:MM:SS'), datestr(specData(idxThread).Data{1}(end), 'dd/mm/yyyy HH:MM:SS')));
    dataStruct(3)  = struct('group', 'METADADOS',           'value', metaData);

    htmlContent    = [sprintf('<p style="font-family: Helvetica, Arial, sans-serif; font-size: 16px; text-align: justify; line-height: 12px; margin: 5px; padding-top: 5px; padding-bottom: 10px;"><b>%s</b></p>', emissionTag) ...
                      textFormatGUI.struct2PrettyPrintList(dataStruct, 'delete')];

    emissionID     = struct('Thread',   struct('Index',     idxThread,                                ...
                                               'UUID',      {specData(idxThread).RelatedFiles.uuid}), ...
                            'Emission', struct('Index',     idxEmission,                              ...
                                               'Frequency', FreqCenter,                               ...
                                               'BW_kHz',    BW_kHz,                                   ...
                                               'Tag',       emissionTag));
end